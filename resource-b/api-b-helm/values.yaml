# Default values for your-app.

# deployment

# Autoscaling configuration
autoscaling:
  enabled: true  # Set to true to enable Horizontal Pod Autoscaler
  minReplicas: 2  # Minimum number of replicas
  maxReplicas: 5  # Maximum number of replicas
  targetCPUUtilizationPercentage: 80  # Target CPU utilization percentage for scaling

# initial pods count
replicaCount: 3

# docker image run in container
image:
  repository: resource-b-image  # Update with your Docker image
  pullPolicy: IfNotPresent
  tag: latest  # Specify your image tag

# Optionally configure liveness and readiness probes
livenessProbe:
  httpGet:
    path: /actuator/health
    port: 8080

readinessProbe:
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 30  # Adjust as necessary
  periodSeconds: 10
  timeoutSeconds: 5

resources:
  limits:
    cpu: "500m"
    memory: "512Mi"
  requests:
    cpu: "250m"
    memory: "256Mi"

# service: name, type, port
service:
  name: api-b-helm  # Updated to match the deployment name
  port: 8080
  targetPort: 8080
  type: ClusterIP  # Keep this as ClusterIP

serviceAccount:
  create: true
  name: resource-service-account
  automount: true
  annotations: {}

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-next-upstream: "error timeout http_502 http_504"
  hosts:
    - host: resource-b-domain.local
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: api-b-helm  # Updated to match the service name
              port:
                number: 8080

# Configure logging
logLevel: info  # Change to debug for more detailed logs

# Specify environment variables for service-b
env:
  - name: SPRING_PROFILES_ACTIVE
    value: dev  # Change this to your desired profile
